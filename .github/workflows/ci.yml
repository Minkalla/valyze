    name: Valyze CI

    on:
      push:
        branches:
          - main
      pull_request:
        branches:
          - main

    jobs:
      build-and-test:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Python 3.10
            uses: actions/setup-python@v4
            with:
              python-version: '3.10'

          - name: Install Poetry
            uses: snok/install-poetry@v1
            with:
              version: '1.8.2'
              virtualenvs-in-project: true
              installer-parallel: true

          - name: Generate poetry.lock (for CI compatibility) # <-- NEW STEP
            working-directory: .
            run: poetry lock --no-update # --no-update ensures it only locks based on existing pyproject.toml

          - name: Install Python dependencies
            working-directory: .
            run: poetry install --no-root

          - name: Run Python tests
            working-directory: .
            run: poetry run pytest

          - name: Run Python linting and formatting checks
            working-directory: .
            run: |
              poetry run black .
              poetry run flake8 .
              poetry run isort .

          - name: Run Python dependency audit
            working-directory: .
            run: |
              python -m pip install pip-audit
              poetry export -f requirements.txt --output requirements.txt --without-hashes --dev && pip-audit -r requirements.txt || true
            continue-on-error: true
    