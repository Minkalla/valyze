// For more info, see: https://containers.dev/implementors/json_schema/
{
    "name": "Valyze Development Environment",
    "image": "mcr.microsoft.com/devcontainers/universal:2", // Using a universal base image for broad compatibility

    "features": {
        // Python feature: Pin to 3.10 for compatibility with pyproject.toml
        "ghcr.io/devcontainers/features/python:1": {
            "version": "3.10",
            "installPoetry": "false" // Poetry installation handled explicitly in postCreateCommand for robustness
        },
        // Rust feature: Required for potential Rust components in Valyze (even if minor or future)
        "ghcr.io/devcontainers/features/rust:1": {
            "version": "1.70.0" // Specify a stable Rust version
        },
        // Node.js feature: Included for potential future frontend development or shared tooling with ZynConsent
        "ghcr.io/devcontainers/features/node:1": {
            "version": "20" // Use Node.js LTS version
        }
    },

    "customizations": {
        "vscode": {
            "extensions": [
                // Essential Python extensions
                "ms-python.python",
                "ms-python.vscode-pylance", // Language server for intelligent code completion and error checking
                // Formatting and Linting extensions
                "esbenp.prettier-vscode", // Code formatter for consistent style
                "dbaeumer.vscode-eslint", // Linter for JavaScript/TypeScript (useful for future frontend)
                // Rust extension
                "rust-lang.rust-analyzer", // Language server for Rust
                // GitHub Actions extension for CI workflow editing
                "github.vscode-github-actions"
            ]
        }
    },

    // Commands to run after the container is created (e.g., to install dependencies, build projects)
    "postCreateCommand": "python3 -m pip install --user pipx && python3 -m pipx ensurepath && pipx install poetry && cd app && poetry install --no-root && cd ..",
    
    // Configure remoteUser to be 'codespace' to ensure consistent permissions
    "remoteUser": "codespace"
}
